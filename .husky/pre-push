#!/usr/bin/env sh

# 运行推送前测试（快速验证，避免与pre-commit重叠）
echo "🧪 正在运行推送前验证..."

# 运行核心单元测试的子集（快速检查）
echo "  📦 运行核心单元测试验证..."
npm run test:unit -- --passWithNoTests --silent --verbose=false || {
  echo "⚠️  单元测试失败，但允许推送（建议修复）"
}

# 运行关键集成测试（快速验证核心功能）
echo "  🔗 运行关键集成测试..."
npm run test:integration -- --passWithNoTests --silent --verbose=false --testNamePattern="should add dependency|should create and manage basic tags" || {
  echo "⚠️  关键集成测试失败，但允许推送（建议修复）"
}

# 运行快速E2E验证（如果存在）
echo "  🚀 运行快速E2E验证..."
if [ -f "tests/e2e/run_e2e.sh" ]; then
  timeout 60s bash tests/e2e/run_e2e.sh --quick-verify 2>/dev/null || {
    echo "⚠️  E2E验证超时或失败，但允许推送"
  }
else
  echo "    ℹ️  E2E测试脚本不存在，跳过"
fi

# 检查是否有未处理的 changeset（仅警告，不阻止推送）
if [ -d ".changeset" ] && [ "$(ls -A .changeset/*.md 2>/dev/null)" ]; then
  echo "⚠️  检测到未处理的 changeset 文件"
  echo "   💡 提示：当准备发布时，运行 'npm run release' 来处理这些变更"
  echo "   📝 如果需要添加更多变更说明，运行 'npm run changeset'"
  echo ""
fi

# 检查提交消息质量（最近5个提交）
echo "  📝 检查最近提交质量..."
if command -v git >/dev/null 2>&1; then
  recent_commits=$(git log --oneline -5 2>/dev/null | head -3)
  if [ -n "$recent_commits" ]; then
    echo "    最近提交："
    echo "$recent_commits" | sed 's/^/      /'
  fi
fi

echo "✅ 推送前验证完成，可以推送"
